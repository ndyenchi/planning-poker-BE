{"version":3,"file":"ngx-copypaste.umd.js","sources":["../../src/app/ngx-copypaste/ngx-copypaste.directive.ts","../../src/app/ngx-copypaste/ngx-copypaste.module.ts","../../src/ngx-copypaste.ts"],"names":["Directive","ElementRef","NgModule","CommonModule"],"mappings":";;;;;;;QAOE,+BAA2B,WAAuB;AAAI,YAA3B,gBAAW,GAAX,WAAW,CAAY;AAAC,SAAG;AACxD,QACS,oCAAI,GAAJ;AAAc,YACnB,IAAI,MAAM,GAAqB,MAAM,CAAC,YAAY,EAAE,CAAC;AACzD,YAAI,IAAI,MAAM,EAAE;AAChB,gBAAM,MAAM,CAAC,eAAe,EAAE,CAAC;AAC/B,aAAK;AACL,YAAI,IAAM,OAAO,GAAgB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;AAChE,YAAI,IACE,OAAO,YAAY,gBAAgB;AACzC,gBAAM,OAAO,YAAY,mBAAmB,EACtC;AACN,gBAAM,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;AAC9C,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAM,KAAK,GAAU,QAAQ,CAAC,WAAW,EAAE,CAAC;AAClD,gBAAM,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;AAC/D,gBAAM,MAAM,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;AACrC,gBAAM,IAAI,MAAM,EAAE;AAClB,oBAAQ,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC/B,iBAAO;AACP,aAAK;AACL,YAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACjC,SAAG;;;;;;;;;2EACH;AAAC;AACoC,SAzB5B;yDAJRA,zDAIS;KAJA,SAAC,dAK4B,gBAPnBC,eAAU;EAG5B,FAH+B;AAGvB,AAHiC;CAG/B,gBAAgB,sBAC1B,QAAQ,EAAE,MAAM,vDAJ0B;eAK3C,fADE,QCOH;AAAgC;;;;;;;;;;;;;;;gDAE3B;AAAC;AAAmC,SAFhC;AAAC;AAAC,ICXX;AACA;CDGCC,DCDD;AACO;KDAE,SAAC,sBACR,YAAY,EAAE,CAAC,nDCDT;aDC8B,CAAC,sBACrC,OAAO,EAAE,7CCD0B;AAAqD;iBDEtFC,mBAAY,sBACb,1DCHwF;AAAmE;AAAC;MDI7J,OAAO,EAAE,CAAC,qBAAqB,CAAC,kBACjC,xDCLoK","sourcesContent":["import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngxCopyPaste]',\n  exportAs: 'copy'\n})\nexport class NgxCopyPasteDirective {\n  public constructor(private _elementRef: ElementRef) {}\n\n  public copy(): void {\n    let select: Selection | null = window.getSelection();\n    if (select) {\n      select.removeAllRanges();\n    }\n    const element: HTMLElement = this._elementRef.nativeElement;\n    if (\n      element instanceof HTMLInputElement ||\n      element instanceof HTMLTextAreaElement\n    ) {\n      this._elementRef.nativeElement.select();\n    } else {\n      const range: Range = document.createRange();\n      range.selectNodeContents(this._elementRef.nativeElement);\n      select = window.getSelection();\n      if (select) {\n        select.addRange(range);\n      }\n    }\n    document.execCommand('copy');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxCopyPasteDirective } from './ngx-copypaste.directive';\n\n@NgModule({\n  declarations: [NgxCopyPasteDirective],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxCopyPasteDirective]\n})\nexport class NgxCopyPasteModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}